<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[东隅]]></title>
  <subtitle><![CDATA[桑榆]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://daweih.github.io//"/>
  <updated>2015-08-04T13:09:31.000Z</updated>
  <id>http://daweih.github.io//</id>
  
  <author>
    <name><![CDATA[Dawei Huang]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[移植，测试嵌入的 D3: Coffee Flavour Wheel]]></title>
    <link href="http://daweih.github.io/2015/08/04/Coffee-Flavour-Wheel/"/>
    <id>http://daweih.github.io/2015/08/04/Coffee-Flavour-Wheel/</id>
    <published>2015-08-04T13:09:31.000Z</published>
    <updated>2015-08-04T13:09:31.000Z</updated>
    <content type="html"><![CDATA[<p>为了在 Hexo 系统的 <code>markdown</code> 正文中测试 <code>D3</code> 的可用性，移植了一个<code>咖啡风味轮</code>的可视化，如下：</p>
<h4 id="Coffee_Flavour_Wheel">Coffee Flavour Wheel</h4><script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
<div align="center" id="vis" style="font-size:13pt;font-family:helvetica;zoom:0.4;"></div>
<script src="http://daweih.github.io/js/coffee_flavour_wheel.js" charset="utf-8"></script>
<script>
//    d3.select("div#vis").remove();
</script>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;div align=center id=<span class="string">"vis"</span> style=<span class="string">"font-size:13pt;font-family:helvetica;zoom:0.4;"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script src=<span class="string">"http://daweih.github.io/js/coffee_flavour_wheel.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4 id="代码注释：">代码注释：</h4><ul>
<li>第一行装载 <code>D3</code> 包。</li>
<li>第二行，插入绘图区域，这里的绘图区域是用 <code>div#viz</code> 来定位并操作</li>
<li>第三行，引用绘图用代码，保存在 <code>Hexo</code> 博客系统的 <code>js</code> 文件夹下，会被同步到 github。当然你也可以通过用 <code>&lt;script&gt;&lt;/script&gt;</code> 直接嵌入本页。个人更推荐单独存放，避免 markdown 页面太长。</li>
</ul>
<h4 id="编写小贴士">编写小贴士</h4><ul>
<li><strong>改动 <code>md</code> 文件后直接看效果：</strong>对 DOM 的 <code>attr</code> 和 <code>style</code> 编写，更改无需 <code>hexo d</code>, <code>hexo d</code>，就可以在 <code>hexo s</code> 开启状态的浏览器中查看。写可视化代码时候，需要经常看改动带来的变化，此时可以省去前述的两步。</li>
<li><strong>在 md 文件中编写并测试 <code>js</code> 代码：</strong>使用 <code>hexo s</code> 测试中，代码需要写在页面内测试。测试完毕后再移动到独立文件。因为 gihub 处的代码改动需要 <code>git commit</code>, <code>git push</code> 之后才会生效。如果每次改动后都进行前面 2 项操作，则无妨。这里的问题在于，<code>hexo s</code> 状态下，无法引用本地的文件。这个问题在图片的引用代码中，也是让人不爽。</li>
<li><strong>模块化：</strong>重复使用的 js 代码，尽量放在一处，引用到每个页面，减少维护的复杂度。</li>
</ul>
<p>目前，文章页面的 <code>CSS</code> 还是无法通过嵌入正文生效。需要 D3 直接写入 <code>DOM</code> 的属性。</p>
<p><code>D3</code> 在本站嵌入成功后，我就可以做一些可视化的学习笔记。这样，在笔记里面，就可以添加实时的演示了。</p>
<p>本次嵌入的可视化来自<a href="http://www.jasondavies.com/coffee-wheel/" target="_blank" rel="external">这里</a>。</p>
<blockquote>
<p>测试 iframe</p>
<iframe src="http://daweih.github.io/js/outline/index.html" width="420" height="320" frameborder="0" scrolling="yes"></iframe>


</blockquote>
<h4 id="其他相关博文">其他相关博文</h4><ul>
<li><a href="http://daweih.github.io/2015/07/20/viz-of-chromosome/">一个染色体的可视化</a></li>
</ul>
<p><br></p>
<div align="center"><br><img src="http://daweih.github.io/images/wechat_small_black.jpg"><br></div>
]]></content>
    <summary type="html">
    <![CDATA[<p>为了在 Hexo 系统的 <code>markdown</code> 正文中测试 <code>D3</code> 的可用性，移植了一个<code>咖啡风味轮</code>的可视化，如下：</p>
<h4 id="Coffee_Flavour_Wheel">Coffee Fl]]>
    </summary>
    
      <category term="baby step" scheme="http://daweih.github.io/tags/baby-step/"/>
    
      <category term="coffee" scheme="http://daweih.github.io/tags/coffee/"/>
    
      <category term="d3" scheme="http://daweih.github.io/tags/d3/"/>
    
      <category term="visualization" scheme="http://daweih.github.io/tags/visualization/"/>
    
      <category term="profession" scheme="http://daweih.github.io/categories/profession/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[津门非主流游玩]]></title>
    <link href="http://daweih.github.io/2015/08/02/tianjin-2-day/"/>
    <id>http://daweih.github.io/2015/08/02/tianjin-2-day/</id>
    <published>2015-08-02T11:48:22.000Z</published>
    <updated>2015-08-02T11:48:22.000Z</updated>
    <content type="html"><![CDATA[<p>周末去天津玩，按工作日通勤时间起床，一个小时的地铁，半个小时的火车，抵达。</p>
<p>上一次去还是去欣赏<code>废 (háng) 铁 (mû</code>)，瞻仰<code>先贤祠堂</code>，间隔数年，心态大不同。</p>
<p>住<code>利兹卡尔顿</code>，去临近的老<code>利顺德</code>玩，拍完照片自然要发 SNS，然后被评论“进入了游戏场景”。好吧，其实我还挺期待真正的“洋馆之旅”，全程小刀。</p>
<p><center><img src="http://daweih.github.io/images/tj1.jpg" alt="1" title="经典的复古楼梯"><br><img src="http://daweih.github.io/images/tj2.jpg" alt="2" title="大陆最早的客用电梯，铁达尼的复古感"><br><img src="http://daweih.github.io/images/tj3.jpg" alt="3" title="就差红漆来烘托气氛了"><br><img src="http://daweih.github.io/images/tj4.jpg" alt="4" title="Red Quene 的宫殿"></center></p>
<p>然后隔墙偷拍久负盛名，号称向高迪致敬，但我感觉阴气森森的瓷房子，主题自“<code>Biohazard</code>”换成“<code>Thriller</code>”，于是晚上回去复习了一下 <code>MJ</code>。</p>
<p><center><img src="http://daweih.github.io/images/tj5.jpg" alt="5" title="China House"></center></p>
<p>当然，<code>相声</code>自然是不可错过的。来，爷们亮个相；舞台质量真不错，不仅结实，而且出的这响儿附赠您心跳的。</p>
<p><center><img src="http://daweih.github.io/images/tj6.jpg" alt="6" title="万一倒了会坐死人的亮相，金鸡独立"></center></p>
<p>萌宠压轴，最后负责拉赞，黑猫警长，拜托了。</p>
<p><center><img src="http://daweih.github.io/images/tj7.jpg" alt="7" title="黑猫警长：今天吐毛日。这草咋咬不动？"><br><img src="http://daweih.github.io/images/tj8.jpg" alt="8" title="娃娃的毛被剃了"></center></p>
<p>懒散二日游，慢慢走，休闲不累，周末该如此。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>周末去天津玩，按工作日通勤时间起床，一个小时的地铁，半个小时的火车，抵达。</p>
<p>上一次去还是去欣赏<code>废 (háng) 铁 (mû</code>)，瞻仰<code>先贤祠堂</code>，间隔数年，心态大不同。</p>
<p>住<code>利兹卡尔顿</c]]>
    </summary>
    
      <category term="Forest" scheme="http://daweih.github.io/tags/Forest/"/>
    
      <category term="Friends" scheme="http://daweih.github.io/tags/Friends/"/>
    
      <category term="Larry" scheme="http://daweih.github.io/tags/Larry/"/>
    
      <category term="Vincent" scheme="http://daweih.github.io/tags/Vincent/"/>
    
      <category term="life" scheme="http://daweih.github.io/tags/life/"/>
    
      <category term="tianjin" scheme="http://daweih.github.io/tags/tianjin/"/>
    
      <category term="travel" scheme="http://daweih.github.io/tags/travel/"/>
    
      <category term="life" scheme="http://daweih.github.io/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Looing for publicly available NGS data]]></title>
    <link href="http://daweih.github.io/2015/08/01/Looing-for-data-at-SRA/"/>
    <id>http://daweih.github.io/2015/08/01/Looing-for-data-at-SRA/</id>
    <published>2015-07-31T20:24:05.000Z</published>
    <updated>2015-08-02T19:24:05.000Z</updated>
    <content type="html"><![CDATA[<p>最近 2 年，NGS 的成本越来越低，让研究者可以产生大量的数据，其中有很多优秀的工作，发表了高水平文章。</p>
<div align="center"><br><img src="http://daweih.github.io/images/sra.jpg"><br></div>

<h3 id="主要的_NGS_原始数据库">主要的 NGS 原始数据库</h3><p>按照学术期刊的要求（比如CNS），NGS 的原始数据，在发表前一般会被上传到几个主要的数据库，包括：</p>
<ul>
<li><a href="http://www.ncbi.nlm.nih.gov/sra" target="_blank" rel="external">NCBI European Nucleotide Archive (SRA)</a></li>
<li><a href="http://www.ebi.ac.uk/ena" target="_blank" rel="external">EBI European Nucleotide Archive (ENA)</a></li>
</ul>
<p>作为期刊的读者，我们需要下载某些数据，无非是基于以下一些原因：</p>
<ul>
<li>数据基于的物种 / 组织是研究对象。通过下载公共数据而非自产，来节约研究的开支</li>
<li>对研究者发表的结果感兴趣，想进行重复或深入研究；认为发表数据的研究者有遗漏或忽略了重要的研究方向，想对其数据进入深入挖掘</li>
<li>想用数据来练手（这个动机在学生中很普遍）</li>
</ul>
<p>当然，还会有其它原因，欢迎补充。于是，如何下载呢？</p>
<h3 id="通过文章正文内的线索来寻找">通过文章正文内的线索来寻找</h3><p>这种情况下，发表的文章会直接给出数据提交到的数据库，数据的 accession。比如：</p>
<blockquote>
<p>DNA sequencing data are deposited in the <code>European Nucleotide Archive</code> (<a href="http://www.ebi.ac.uk/ena/" target="_blank" rel="external">http://www.ebi.ac.uk/ena/</a>) under <u style="color:darkred"><code>accession numbers</code> ERP001143, ERP000729 and ERP000106.</u> De novo assembly and genome annotation of wild rice W1943, the genotype dataset of 1,529 rice accessions and the imputed dataset of 446 O. rufipogon accessions for GWAS are available at the Rice Haplotype Map Project database (<a href="http://www.ncgr.ac.cn/RiceHap3" target="_blank" rel="external">http://www.ncgr.ac.cn/RiceHap3</a>). [1]</p>
</blockquote>
<p>再比如：</p>
<blockquote>
<p>Accession codes. Raw sequences have been deposited in the EBI European Nucleotide Archive with <u style="color:darkred">accession number ERP000729 for worldwide rice germplasm (330 worldwide rice accessions: ERS037511–ERS037840)</u> and with accession number ERP000106 for Chinese rice landraces (100 newly added Chinese rice landraces: ERS039279–ERS039378). [2]</p>
</blockquote>
<h3 id="通过数据库的分类系统来寻找，筛选">通过数据库的分类系统来寻找，筛选</h3><p>通过关键词系统、分类系统，你可以在一个数据库，整合所有符合你研究兴趣的数据。</p>
<h3 id="通过其他信息定位">通过其他信息定位</h3><p>但很多时候，文章的作者并没有给出数据具体的存放位置，或者没有给出数据的ID。我们无法很简单地确定数据的位置，这样就要通过多方面的信息来判断。比如参考文献 [3] 就是如此。在这篇文献里，虽然没有给出具体的位置和数据的 accession，但可以参考的信息还有很多，比如：</p>
<ol>
<li>物种是 <em>Triticum aestivum</em> L. cv Chinese Spring</li>
<li>发表日期：Published 18 July 2014</li>
<li>作者单位：Department of Plant Sciences/Centre for Integrative Genetics,The Norwegian University of Life Sciences (NMBU)</li>
<li>Paired end (PE) sequencing libraries</li>
<li>HiSeq2000 (Illumina, San Diego, USA)</li>
<li>RNA was isolated and prepared for RNA-seq by using paired-end libraries with <u style="color:darkred">200–base pair inserts for 30 samples</u> with four biological replicates per cell type and time point (two replicates per room) and two additional technical replicates. Total RNA was extracted from frozen plant material using the RNeasy Lipid Tissue Mini kit (QIAGEN, Hilden, Germany; <a href="http://www.qiagen.com/applications/plant" target="_blank" rel="external">http://www.qiagen.com/applications/plant</a>). </li>
</ol>
<p>用文章的标题、物种名、技术和研究的关键词作为搜索条件，利用 google 的搜索和在数据库内的检索，定位到候选纪录。</p>
<p>通过和潜在的数据的<a href="http://www.ncbi.nlm.nih.gov/bioproject/?term=%22Genome+interplay+in+the+grain+transcriptome+of+hexaploid+bread+wheat%22" target="_blank" rel="external">基本信息</a>的比较，发现支持此数据为文章的数据：</p>
<ol>
<li>Organism:    <em>Triticum aestivum</em>, cultivar: Chinese Spring</li>
<li>Registration date: 19-Jul-2014</li>
<li>Submitted by: Department of Plant and Environmental Sciences/CIGENE, Norwegian University of Life Sciences</li>
<li>Paired end (PE) sequencing libraries</li>
<li>Illumina HiSeq 2000</li>
<li>30 samples. Total RNA was extracted from frozen plant material using the RNeasy Lipid Tissue Mini kit (QIAGEN, Hilden, Germany; <a href="http://www.qiagen.com/applications/plant" target="_blank" rel="external">http://www.qiagen.com/applications/plant</a>). Illumina TruSeq RNA Sample Preparation Kits v2</li>
</ol>
<p>上面的信息的排列，我按照一一对应做了总结。比对之后，确信这个数据和文章的对应关系。</p>
<p>之后就可以把每个 SRA 文件的取样和实验信息整理成表，和发表的文章的信息做对照（这里就开始细活了）。</p>
<h3 id="下载方法">下载方法</h3><p>SRA 数据的下载方法，推荐使用 Aspera。用法请参考<a href="http://daweih.github.io/2015/07/24/aspera-download-data-from-sra/">旧时博文</a>。对于数据量较少的，也可以使用 wget 等命令下载，但耗时较长。</p>
<h3 id="Reference">Reference</h3><ol>
<li><a href="http://www.ncbi.nlm.nih.gov/pubmed/?term=23034647" target="_blank" rel="external">Huang, X. et al. A map of rice genome variation reveals the origin of cultivated rice. Nature 490, 497–501 (2012).</a></li>
<li><a href="http://www.ncbi.nlm.nih.gov/pubmed/?term=20972439" target="_blank" rel="external">Huang, X. et al. Genome-wide association studies of 14 agronomic traits in rice landraces. Nat. Genet. 42, 961–967 (2010).</a></li>
<li><a href="http://www.ncbi.nlm.nih.gov/pubmed/?term=25035498" target="_blank" rel="external">Pfeifer, M. et al. Genome interplay in the grain transcriptome of hexaploid bread wheat. Science 345, 1250091–1250091 (2014).</a></li>
</ol>
<p><br></p>
<div align="center"><br><img src="http://daweih.github.io/images/wechat_small_black.jpg"><br></div>]]></content>
    <summary type="html">
    <![CDATA[<p>最近 2 年，NGS 的成本越来越低，让研究者可以产生大量的数据，其中有很多优秀的工作，发表了高水平文章。</p>
<div align="center"><br><img src="http://daweih.github.io/images/sra.jpg"><br><]]>
    </summary>
    
      <category term="NGS" scheme="http://daweih.github.io/tags/NGS/"/>
    
      <category term="SRA" scheme="http://daweih.github.io/tags/SRA/"/>
    
      <category term="baby step" scheme="http://daweih.github.io/tags/baby-step/"/>
    
      <category term="bioinformatics" scheme="http://daweih.github.io/tags/bioinformatics/"/>
    
      <category term="profession" scheme="http://daweih.github.io/categories/profession/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[懒人适用的咖啡具]]></title>
    <link href="http://daweih.github.io/2015/07/25/coffee-easy-to-make/"/>
    <id>http://daweih.github.io/2015/07/25/coffee-easy-to-make/</id>
    <published>2015-07-25T06:06:27.000Z</published>
    <updated>2015-07-25T06:06:27.000Z</updated>
    <content type="html"><![CDATA[<p>原文发表于<a href="https://qdan.me/list/VUyyEZpuJz48iJfh?from=mylists" target="_blank" rel="external">轻单</a>，由于它濒死，于是转载于此。</p>
<p>作为一个咖啡爱好者，偶尔也发点非专业类的文章在这个博客。生活若完全没有了情调，人也会变得无聊吧。</p>
<hr>
<p>想享受咖啡又 (xiâng) 犯 (shêng) 懒 (qián) ？请看。</p>
<h4 id="法压壶">法压壶</h4><p>使用金属滤网。放入磨好的粉，泡上热水，压下，倒出。丢弃咖啡渣，热水冲干净即可。</p>
<div align="center"><br><img src="http://daweih.github.io/images/coffee_qdan1.jpg"><br></div>

<h4 id="摩卡壶">摩卡壶</h4><p>爱咖啡的油脂？用摩卡壶。</p>
<ul>
<li>装粉，装水，组装壶。加热，出咖啡后拆开壶清洗。</li>
<li>优点：使用金属滤网，好清洗；缺点：需要热源。</li>
</ul>
<div align="center"><br><img src="http://daweih.github.io/images/coffee_qdan2.jpg"><br></div>

<h4 id="不锈钢过滤器">不锈钢过滤器</h4><ul>
<li>优点：金属滤网好清洗；</li>
<li>缺点：萃取不能一次完成（需要多次注水来萃取），需要有个注水的壶。</li>
</ul>
<p>配一把手冲壶，还是有必要的。可有做出优秀的单品咖啡。</p>
<div align="center"><br><img src="http://daweih.github.io/images/coffee_qdan3.jpg"><br></div>

<h4 id="越南咖啡过滤器">越南咖啡过滤器</h4><p>嫌单品太苦，试试越南咖啡，配炼乳。</p>
<ul>
<li>优点：注水后等着就行了。</li>
<li>缺点：需要滤纸。</li>
</ul>
<div align="center"><br><img src="http://daweih.github.io/images/coffee_qdan4.jpg"><br></div>
]]></content>
    <summary type="html">
    <![CDATA[<p>原文发表于<a href="https://qdan.me/list/VUyyEZpuJz48iJfh?from=mylists" target="_blank" rel="external">轻单</a>，由于它濒死，于是转载于此。</p>
<p>作为一个咖啡爱好者，偶尔]]>
    </summary>
    
      <category term="baby step" scheme="http://daweih.github.io/tags/baby-step/"/>
    
      <category term="coffee" scheme="http://daweih.github.io/tags/coffee/"/>
    
      <category term="life" scheme="http://daweih.github.io/tags/life/"/>
    
      <category term="life" scheme="http://daweih.github.io/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Aspera download data from SRA]]></title>
    <link href="http://daweih.github.io/2015/07/24/aspera-download-data-from-sra/"/>
    <id>http://daweih.github.io/2015/07/24/aspera-download-data-from-sra/</id>
    <published>2015-07-24T14:15:54.000Z</published>
    <updated>2015-07-24T14:15:54.000Z</updated>
    <content type="html"><![CDATA[<h4 id="背景">背景</h4><ul>
<li><p>为什么要使用 aspera？</p>
<ul>
<li>因为测序数据迈入 NGS 时代后，通量增长很快，尤其是 NCBI SRA 的数据，单个压缩包很大，需要使用更快速的传输工具。</li>
<li>aspera 提供命令行的交互，便于管理</li>
</ul>
</li>
<li><p>aspera 比传统的 scp, wget 速度更快，同时具有命令行程序的纯文本输出特性。</p>
</li>
<li><p>aspera 还有图形界面版本，适合多种偏好的用户。</p>
</li>
</ul>
<p><a href="http://boyun.sh.cn/bio/?p=1933" target="_blank" rel="external">博耘生物说</a>:</p>
<blockquote>
<p>速铂Aspera是一套商业的高速文件传输解决方案，随着高通量数据的大量产生，从而对于大文件快速传输的需求，开始应用到生物领域，目前 NCBI、EBI 的 SRA 库都提供这样的服务。<br>…<br>一句话，远距离，大文件，Aspera 优势巨大。</p>
</blockquote>
<p>我说：</p>
<blockquote>
<p>你如果经历过使用 <code>wget</code> 下载 sra 数据要等几天几个星期，还可能断掉，就知道用下面这个黑科技有多爽了。</p>
</blockquote>
<h4 id="安装_aspera-connect：">安装 aspera-connect：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看系统的版本</span></span><br><span class="line">$ uname <span class="operator">-a</span></span><br><span class="line">*x86_64*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载对应的版本（目前测试需要翻墙）</span></span><br><span class="line">$ wget http://download.asperasoft.com/download/sw/connect/<span class="number">3.6</span>.<span class="number">0</span>/aspera-connect-<span class="number">3.6</span>.<span class="number">0.106805</span>-linux-<span class="number">64</span>.tar.gz</span><br><span class="line"></span><br><span class="line">$ gunzip aspera-connect-<span class="number">3.6</span>.<span class="number">0.106805</span>-linux-<span class="number">64</span>.tar.gz</span><br><span class="line">$ tar -xvf aspera-connect-<span class="number">3.6</span>.<span class="number">0.106805</span>-linux-<span class="number">64</span>.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ sh aspera-connect-<span class="number">3.6</span>.<span class="number">0.106805</span>-linux-<span class="number">64</span>.sh</span><br></pre></td></tr></table></figure>
<p>安装输出结果</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Installing Aspera Connect</span><br><span class="line"></span><br><span class="line">Deploying Aspera Connect (/home/your_user_name/.aspera/connect) <span class="keyword">for</span> the current user only.</span><br><span class="line">Restart firefox manually to load the Aspera Connect plug-in</span><br><span class="line"></span><br><span class="line">Install complete.</span><br></pre></td></tr></table></figure>
<h4 id="修改环境变量">修改环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ vi ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加下面一行</span></span><br><span class="line"><span class="built_in">export</span> PATH=/home/your_user_name/.aspera/connect/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 环境变量生效</span></span><br><span class="line">$ <span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>
<h4 id="配置参数，测试下载">配置参数，测试下载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PRIVATE-KEY-FILE 文件位置</span></span><br><span class="line">~/.aspera/connect/etc/asperaweb_id_dsa.openssh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载用的命令</span></span><br><span class="line">$ ascp  -i asperaweb_id_dsa.openssh --mode recv --host ftp-private.ncbi.nlm.nih.gov --user anonftp   --file-list  sra_list.txt  -k <span class="number">1</span> -QT <span class="operator">-l</span> <span class="number">200</span>m  /path_to_save_download/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对参数的解释</span></span><br><span class="line">Usage: ascp [OPTION] SRC... DEST</span><br><span class="line">          SRC to DEST, or multiple SRC to DEST dir</span><br><span class="line">          SRC, DEST format: [[user@]host:]PATH</span><br><span class="line">  -h,--help                       Display usage</span><br><span class="line">  -A,--version                    Display version.</span><br><span class="line">  -i PRIVATE-KEY-FILE             Private-key file name (id_rsa)</span><br><span class="line">  --mode=MODE                     MODE: send, recv</span><br><span class="line">  --host=HOSTNAME</span><br><span class="line">  --user=USERNAME</span><br><span class="line">  --file-list=FILENAME            File with list of sources</span><br><span class="line">  -k RESUME-LEVEL                 Resume criterion: <span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span></span><br><span class="line">  <span class="operator">-l</span> MAX-RATE                     Max transfer rate</span><br><span class="line">  -q                              Disable progress display</span><br><span class="line">  -T                              Disable encryption</span><br><span class="line"><span class="comment"># 一般来说，你只要修改 `--file-list` `-i` 对因你自己的情况即可</span></span><br></pre></td></tr></table></figure>
<h4 id="获取下载文件地址">获取下载文件地址</h4><p>一个 <code>sra_list.txt</code> 例子:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sra/sra-instant/reads/ByRun/sra/ERR/ERR009/ERR009428/ERR009428.sra</span><br></pre></td></tr></table></figure>
<p>如何获取此地址：</p>
<ol>
<li><p>找到 <code>sra</code> 文件的页面（发表的文章一般会提供这个页面的 ID），点击红框进入下一页</p>
<p><img src="http://daweih.github.io/images/sra1.png" alt="找到sra文件的页面（发表的文章一般会提供这个页面的 ID），点击红框进入下一页"></p>
</li>
<li><p>地址栏里显示了地址，然后按照上文的 <code>sra_list.txt</code> 模式编写</p>
<p><img src="http://daweih.github.io/images/sra2.png" alt="地址栏里显示了地址，然后按照上文的 `sra_list.txt` 模式编写"></p>
</li>
</ol>
<h4 id="OS_X_如何使用？">OS X 如何使用？</h4><p>在 OS X 下，可以直接从官网下载 dmg 的安装包。安装之后，注意：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 程序的可执行文件路径</span></span><br><span class="line">/Users/your_user_name/Applications/Aspera\ Connect.app/Contents/Resources/ascp</span><br><span class="line"></span><br><span class="line"><span class="comment"># PRIVATE-KEY-FILE 文件位置</span></span><br><span class="line">/Users/your_user_name/Applications/Aspera\ Connect.app/Contents/Resources/asperaweb_id_dsa.openssh</span><br></pre></td></tr></table></figure>
<p>其他上述参数沿用。</p>
<p><br></p>
<p>最后，请欣赏华丽丽的下载速度。</p>
<p>  <img src="http://daweih.github.io/images/ascp.png" alt="ascp"></p>
<p><br></p>
<div align="center"><br><img src="http://daweih.github.io/images/wechat_small_black.jpg"><br></div>]]></content>
    <summary type="html">
    <![CDATA[<h4 id="背景">背景</h4><ul>
<li><p>为什么要使用 aspera？</p>
<ul>
<li>因为测序数据迈入 NGS 时代后，通量增长很快，尤其是 NCBI SRA 的数据，单个压缩包很大，需要使用更快速的传输工具。</li>
<li>aspera 提供]]>
    </summary>
    
      <category term="NGS" scheme="http://daweih.github.io/tags/NGS/"/>
    
      <category term="SRA" scheme="http://daweih.github.io/tags/SRA/"/>
    
      <category term="bioinformatics" scheme="http://daweih.github.io/tags/bioinformatics/"/>
    
      <category term="profession" scheme="http://daweih.github.io/categories/profession/"/>
    
  </entry>
  
</feed>